<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="true" scanPeriod="30 seconds">
    <property name="LOG_HOME" value="${user.dir}/logs"/>
    <property name="PROJECT_NAME" value="UVDownloader"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>


    <!-- 常用的Pattern变量,大家可打开该pattern进行输出观察 -->
    <!-- <pattern> -->
    <!-- 	%d{yyyy-MM-dd HH:mm:ss} [%level] - %msg%n -->
    <!-- 	Logger: %logger -->
    <!-- 	Class: %class -->
    <!-- 	File: %file -->
    <!-- 	Caller: %caller -->
    <!-- 	Line: %line -->
    <!-- 	Message: %m -->
    <!-- 	Method: %M -->
    <!-- 	Relative: %relative -->
    <!-- 	Thread: %thread -->
    <!-- 	Exception: %ex -->
    <!-- 	xException: %xEx -->
    <!-- 	nopException: %nopex -->
    <!-- 	rException: %rEx -->
    <!-- 	Marker: %marker -->
    <!-- 	%n 回车换行符-->
    <!-- </pattern> -->
    <!--
        Grouping by parentheses as explained above allows coloring of sub-patterns.
        As of version 1.0.5,
        PatternLayout recognizes
        "%black",
        "%red", "%green","%yellow","%blue", "%magenta","%cyan", "%white","%gray",
        "%boldRed","%boldGreen", "%boldYellow", "%boldBlue", "%boldMagenta", "%boldCyan", "%boldWhite"
        and "%highlight" as conversion words.
        These conversion words are intended to contain a sub-pattern.
        Any sub-pattern enclosed by a coloring word will be output in the specified color.
    -->

    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %boldGreen(%d{yyyy-MM-dd HH:mm:ss}) %highlight(%-5level) %magenta([%class:%line]) - %msg%n
            </pattern>
        </encoder>
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    <!-- 按日期区分的滚动日志 -->
    <appender name="Info-Date" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${PROJECT_NAME}/info.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%class:%line] - %m%n</pattern>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 按文件大小区分的滚动日志 -->
    <appender name="Error-Size" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${PROJECT_NAME}/error.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%class:%line] - %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/error.%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
    </appender>


    <!-- 按日期和大小区分的滚动日志 -->
    <appender name="Debug-Date-Size" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${PROJECT_NAME}/debug.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%class:%line] - %m%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--spring framework package level: WARN-->
    <logger name="org.springframework" level="DEBUG" additivity="true">
        <appender-ref ref="Debug-Date-Size"/>
    </logger>
    <logger name="java.sql.PreparedStatement" level="DEBUG" additivity="true">
        <appender-ref ref="Debug-Date-Size"/>
    </logger>
    <logger name="java.sql.Connection" level="DEBUG" additivity="true">
        <appender-ref ref="Debug-Date-Size"/>
    </logger>
    <logger name="java.sql.Statement" level="DEBUG" additivity="true">
        <appender-ref ref="Debug-Date-Size"/>
    </logger>
    <logger name="org.springframework.web.servlet.view" level="INFO" additivity="true"/>
    <logger name="org.springframework.context.support.ApplicationObjectSupport" level="INFO" additivity="true"/>
    <logger name="org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer" level="INFO" additivity="true"/>
    <logger name="org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener" level="INFO" additivity="true"/>
    <logger name="org.springframework.beans.factory.support" level="INFO" additivity="true"/>
    <logger name="org.springframework.core.env.PropertySourcesPropertyResolver" level="INFO" additivity="true"/>
    <logger name="org.springframework.beans.factory.annotation.InjectionMetadata" level="INFO" additivity="true"/>
    <logger name="org.springframework.web.servlet" level="INFO" additivity="true"/>
    <logger name="org.springframework.aop.framework.CglibAopProxy" level="INFO" additivity="true"/>
    <logger name="org.springframework.beans.factory" level="INFO" additivity="true"/>
    <logger name="org.springframework.core.io.support.PathMatchingResourcePatternResolver" level="INFO" additivity="true"/>
    <logger name="org.springframework.context.annotation" level="INFO" additivity="true"/>
    <logger name="org.springframework.core.LocalVariableTableParameterNameDiscoverer" level="INFO" additivity="true"/>
    <logger name="org.springframework.beans.CachedIntrospectionResults" level="INFO" additivity="true"/>
    <logger name="org.hibernate.validator.internal.xml.ResourceLoaderHelper" level="INFO" additivity="true"/>
    <logger name="org.springframework.core.env.MutablePropertySources" level="INFO" additivity="true"/>
    <logger name="org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper" level="INFO" additivity="true"/>
    <logger name="org.springframework.boot.web.servlet.ServletContextInitializerBeans" level="INFO" additivity="true"/>
    <logger name="org.hibernate.validator.internal" level="INFO" additivity="true"/>
    <logger name="org.springframework.boot.context.embedded" level="INFO" additivity="true"/>
    <logger name="freemarker" level="INFO" additivity="true"/>
    <logger name="com.zaxxer.hikari.pool.HikariPool" level="INFO" additivity="true"/>


    <root level="DEBUG">
        <appender-ref ref="Console"/>
        <appender-ref ref="Debug-Date-Size"/>
        <appender-ref ref="Info-Date"/>
        <appender-ref ref="Error-Size"/>
    </root>
</configuration>